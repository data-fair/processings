services:

  #####
  # reverse proxy for the whole environment
  #####
  nginx:
    image: nginx:1.23.1-alpine
    network_mode: host
    volumes:
      - ./dev/resources/nginx.conf:/etc/nginx/nginx.conf:ro

  #####
  # related services from the data-fair stack
  #####

  simple-directory:
    profiles:
      - dev
      - test
    image: ghcr.io/data-fair/simple-directory:master
    network_mode: host
    depends_on:
      - mongo
    environment:
      - DEBUG=session
      - CONTACT=contact@test.com
      - ADMINS=["superadmin@test.com"]
      - PUBLIC_URL=http://localhost:5600/simple-directory
      - MAILDEV_ACTIVE=true
      - MONGO_URL=mongodb://localhost:27017/simple-directory
      - STORAGE_TYPE=file
      - AUTHRATELIMIT_ATTEMPTS=200
      - OBSERVER_ACTIVE=false
      - MANAGE_PARTNERS=true
      - MANAGE_DEPARTMENTS=true
      - CIPHER_PASSWORD=cipherpassword
    volumes:
      - ./dev/resources/users.json:/webapp/data/users.json
      - ./dev/resources/organizations.json:/webapp/data/organizations.json

  data-fair:
    profiles:
      - dev
      - test
    image: ghcr.io/data-fair/data-fair:master
    restart: on-failure:10
    network_mode: host
    depends_on:
      mongo:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    environment:
      - PORT=8081
      - DEBUG=files
      - MONGO_URL=mongodb://localhost:27017/data-fair
      - OPENAPI_VIEWER_URL=http://localhost:5600/openapi-viewer/
      - DIRECTORY_URL=http://localhost:5600/simple-directory
      - NOTIFY_URL=http://localhost:5600/events
      - PUBLIC_URL=http://localhost:5600/data-fair
      - WS_PUBLIC_URL=ws://localhost:5600/data-fair
      - EXTRA_NAV_ITEMS=[{"id":"processings","can":"contrib","iframe":"http://localhost:5600/processings/processings","basePath":"/processings","icon":"mdi-cog-transfer-outline","title":"Traitements périodiques"}]
      - EXTRA_ADMIN_NAV_ITEMS=[{"id":"processings","iframe":"http://localhost:5600/processings/admin","basePath":"/processings","icon":"mdi-cog-transfer-outline","title":"Traitements périodiques"},{"id":"processingsAdminDoc","href":"http://localhost:5600/openapi-viewer?urlType=processingsAdmin","icon":"mdi-cog-transfer-outline","title":"API Traitements périodiques"}]
      - OBSERVER_ACTIVE=false
      - OPENAPI_VIEWER_V2=true

  openapi-viewer:
    profiles:
      - dev
    image: ghcr.io/data-fair/openapi-viewer:master
    ports:
      - 8083:8080
    environment:
      - USE_SIMPLE_DIRECTORY=true
      - ALLOWED_URLS={"processings":"http://localhost:5600/processings/api/v1/api-docs.json","processingsId":"http://localhost:5600/processings/api/v1/processings/{id}/api-docs.json","processingsAdmin":"http://localhost:5600/processings/api/v1/admin/api-docs.json"}

  events:
    profiles:
      - dev
    image: ghcr.io/data-fair/events:main
    network_mode: host
    environment:
      - PORT=8084
      - PRIVATE_DIRECTORY_URL=http://localhost:5600/simple-directory
      - SECRET_IDENTITIES=secret-identities
      - SECRET_EVENTS=secret-events
      - SECRET_SENDMAILS=secret-sendmails
      - OBSERVER_ACTIVE=false

  #####
  # db and search engine
  #####

  elasticsearch:
    profiles:
      - dev
      - test
    image: ghcr.io/data-fair/elasticsearch:7.x
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      timeout: 10s
      interval: 2s
      retries: 50

  mongo:
    profiles:
      - dev
      - test
    image: mongo:4.2
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db

  #####
  # Api and worker in docker mode
  #####

  main:
    build:
      context: .
      dockerfile: Dockerfile
      target: main
      args:
        NODE_ENV: development
    depends_on:
      - data-fair
    profiles:
      - testImages
    image: datafair/processings/main:dev
    network_mode: host
    environment:
      - NODE_ENV=development
    volumes:
      - processings-data:/app/data

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: worker
      args:
        NODE_ENV: development
    depends_on:
      - data-fair
    profiles:
      - testImages
    image: datafair/processings/worker:dev
    network_mode: host
    environment:
      - NODE_ENV=development
    volumes:
      - processings-data:/app/data

volumes:
  elasticsearch-data:
  mongo-data:
  processings-data:
